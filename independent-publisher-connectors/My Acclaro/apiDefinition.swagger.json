{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My Acclaro (Independent Publisher)",
    "description": "My Acclaro allows you to seamlessly connect to the Acclaro client portal to submit your translation projects directly."
  },
  "host": "apisandbox.acclaro.com",
  "basePath": "/api/v2",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/info/version": {
      "get": {
        "summary": "Get system information",
        "description": "Returns a variety of helpful system information including version of API source code in use, service endpoint and last date of database synchronization.",
        "operationId": "GetSystemInformation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "description": "version"
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "endpoint"
                    },
                    "sitedescription": {
                      "type": "string",
                      "description": "sitedescription"
                    },
                    "backend": {
                      "type": "string",
                      "description": "backend"
                    },
                    "maxdocsize": {
                      "type": "string",
                      "description": "maxdocsize"
                    },
                    "lastsync": {
                      "type": "string",
                      "description": "lastsync"
                    }
                  },
                  "description": "data"
                }
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "success"
                },
                "errorCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "errorCode"
                },
                "errorMessage": {
                  "type": "string",
                  "description": "errorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/info/languages": {
      "get": {
        "summary": "Get supported languages",
        "description": "Returns a list of supported languages.",
        "operationId": "GetSupportedLanguages",
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/info/language-pairs": {
      "get": {
        "summary": "Get language pairs",
        "description": "Returns a list of source/target pairs that may be used for translations.",
        "operationId": "GetLanguagePairs",
        "parameters": [
          {
            "name": "sourcelang",
            "default": "en-us",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/info/account": {
      "get": {
        "summary": "Get account information",
        "description": "Returns profile information about the API user account in use.",
        "operationId": "GetAccountInformation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/info/order-types": {
      "get": {
        "summary": "Get all supported order types",
        "description": "Returns all order types available for the account as an array of Order Types, each order type consisting of a name and a flag “default” which will be zero or one, indicating which order type will be set when none is specified.\n Note that order types is an optional argument in create order (/orders) and edit order (/orders/{orderId}) intended to assist clients who require this level of order classification for reporting purposes.",
        "operationId": "GetAllSupportedOrderTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/files/{fileid}/callback": {
      "delete": {
        "summary": "Delete a callback added to the file",
        "description": "Request that Acclaro no longer invoke the supplied URL when the file changes in any way. ",
        "operationId": "DeleteACallbackAddedToTheFile",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          },
          {
            "name": "url",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "The URL to be removed from the callback system"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "summary": "Add a callback for file updates",
        "description": "Request that Acclaro invoke the supplied URL when the file changes in any way.",
        "operationId": "AddACallbackForFileUpdates",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          },
          {
            "name": "url",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "The URL to be added to the callback system"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/files/{fileid}/email": {
      "delete": {
        "summary": "Delete a callback added to the file",
        "description": "Request that Acclaro no longer email the supplied address when the file changes in any way.",
        "operationId": "DeleteACallbackAddedToTheFile2",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "The email to be deleted to the callback system"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "summary": "Request an email on file changes",
        "description": "Request that Acclaro send an email message to the provided address when the file changes in any\n     way.  For customer-friendly email messages, see the delivery options in the My Acclaro portal.  This\n     email is a simple message geared towards developers.",
        "operationId": "RequestAnEmailOnFileChanges",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "The email to be added to the callback system"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/files/{fileid}": {
      "get": {
        "summary": "Get a file through the file ID",
        "description": "Returns the contents of a previously sent file. This is one of the few operations that does not\n     return JSON data, instead directly returning the file contents.  If an error occurs while processing the\n     request, then the response will be JSON data, so the type of the response should always be checked.",
        "operationId": "GetAFile",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a previously uploaded file from the order",
        "description": "Deletes the given file from the order, prior to an order being submitted.|n If a source file ever needs to be cancelled after it’s been submitted as part of an order, ‘CANCEL FILE’ can be submitted as a comment in /orders/{orderid}/files/{fileid}}/comment.\n We also request that you separately contact your Acclaro project manager with the source file cancellation request.",
        "operationId": "DeleteAFileFromTheOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/files/{fileid}/status": {
      "get": {
        "summary": "Get file status information",
        "description": "Retrieves information about the given file.",
        "operationId": "GetFileInformation",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/files/{fileid}/rate": {
      "post": {
        "summary": "Rate content quality of a file",
        "description": "Submits rating information about files. Rating scale is 1-5; being 1 for poor quality and 5 for perfect quality. Review text strings are optional and can be included to explain the reasoning for the rating such as identified errors or areas of translation improvement classifications. ",
        "operationId": "RateAFile",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          },
          {
            "name": "rating",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "review",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/files/{fileid}/comment": {
      "post": {
        "summary": "Add a comment for a file",
        "description": "Adds a comment to file. New comments are appended. ",
        "operationId": "AddACommentForAFile",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          },
          {
            "name": "comment",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/files/{fileid}/review-url": {
      "post": {
        "summary": "Add a review URL for a file",
        "description": "Adds a URL to a file so it may be referenced for in context review on the web. This assumes the URL is publically available or the translator has private access credentials to view the content. For source files this URL may assist translators in understanding the initial context and layout restrictions of the content. For target files, this URL may assist translators, editors and testers with verification workflows to ensure translated content appears as expected on the destination web pages.",
        "operationId": "AddAReviewUrlForAFile",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "fileid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "the unique identifier assigned to a source or target file, i.e. the file ID"
          },
          {
            "name": "url",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/files": {
      "post": {
        "summary": "Send a source file",
        "description": "Adds a file to an order, taking the filename and mime-type from the file metadata. If no orderid is provided, a new order is automatically created. The sourcelang should be one of the language codes obtained from /info/languages. Targetlangs can be a single language code or several language codes in a comma-separated list.\n Encoding is optional, and defaults to “UTF-8” if not specified. ClientRef is an optional value meaningful to the API user typically used for Purchase Order numbers but can be used for any relevant information; if supplied when the file is loaded, it will be returned in all future calls about this file. If a filename is supplied that duplicates the name of another file in this order, the system will make it unique by adding additional characters (i.e. “documentation.docx” may become “documentation-2.docx”). \n Returned file metadata includes both the originally supplied filename and the possibly modified name that Acclaro will use. Individual file size is limited to 100MB maximum. The API is file agnostic, as there are no file type limitations. XLIFF files are a common translation industry standard and are fully supported. In-progress orders may have new additional files added to them as long as the source and target languages match the original order’s files.\nFor continuous programmatic orders, it is recommended that the /orders/{orderid}/files be used to build orders up with source files before submission via the SubmitOrder call, as this is the most efficient path for Acclaro translation services to receive orders with multiple files and then return subsequent translation files.\n If clients wish to maintain specific folder and file structures for their source files, they can upload zip files which will be returned with translations in desired folder and file structures within target delivery zip files.",
        "operationId": "SendASourceFile",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "sourcelang",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "targetlang",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": true
          },
          {
            "name": "enconding",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "clientref",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/callback": {
      "delete": {
        "summary": "Delete a callback url added to the order",
        "description": "Request that Acclaro no longer invoke the supplied URL when the order changes in any way.",
        "operationId": "DeleteACallbackAddedToOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "summary": "Add a callback url to get order updates",
        "description": "Request that Acclaro invoke the supplied URL when the order changes in any way. If your code is only concerned with certain changes, such as the status going to “complete”, you must retrieve the order information and check for that.",
        "operationId": "AddACallbackForOrderUpdates",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "url",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/email": {
      "delete": {
        "summary": "Stop email notifications for order changes",
        "description": "Request that Acclaro no longer email the supplied address when the order status changes in any way.",
        "operationId": "StopAnEmailFromReceivingOrderChanges",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "summary": "Request notification emails for order status changes",
        "description": "Request that Acclaro send an email message to the provided address when the order changes in any way. For customer-friendly email messages, see the delivery options in the My Acclaro portal. This email is a simple message geared towards developers.",
        "operationId": "RequestAnEmailOnOrderChanges",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/comment/{commentid}": {
      "delete": {
        "summary": "Remove a comment from order",
        "description": "Removes a comment from the specified order",
        "operationId": "RemoveACommentFromOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "commentid",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "summary": "Edit a comment on the order",
        "description": "Update a comment on the order",
        "operationId": "EditACommentOnTheOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "commentid",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "comment",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/comment": {
      "post": {
        "summary": "Add a comment to order",
        "description": "Adds a comment to an order. New comments are appended. If an order ever needs to be cancelled after it's been submitted, ‘CANCEL ORDER’ can be submitted as a comment.",
        "operationId": "AddACommentToOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "comment",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/strings/{string_id}": {
      "get": {
        "summary": "Get string by id",
        "description": "Get string for an order along with status and translated values if completed or preview  ready.",
        "operationId": "GetOrderStringById",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "string_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/strings": {
      "post": {
        "summary": "Add strings to order",
        "description": "Add strings to a string order type.",
        "operationId": "AddStrings",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "strings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "value"
                      },
                      "target_lang": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "target_lang"
                      },
                      "source_lang": {
                        "type": "string",
                        "description": "source_lang"
                      },
                      "key": {
                        "type": "string",
                        "description": "key"
                      },
                      "callback": {
                        "type": "string",
                        "description": "callback"
                      },
                      "meta": {
                        "type": "object",
                        "properties": {},
                        "description": "meta"
                      }
                    }
                  },
                  "description": "strings"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/strings/callback": {
      "post": {
        "summary": "Add a callback for order string updates",
        "description": "Request that Acclaro invoke the supplied URL when the order string changes in any way. The callback will include a string_id query parameter, which can be used to fetch string details.",
        "operationId": "AddACallbackForOrderStringUpdates",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "url",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}": {
      "get": {
        "summary": "Get an order",
        "description": "Returns order information based on the given id.",
        "operationId": "GetAnOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an order",
        "description": "Deletes an order for the current user with the given ID, if the order is status ‘new’ and the current user has proper account privileges.",
        "operationId": "DeleteAnOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "summary": "Edit an order",
        "description": "Updates an order, returns the new record. After an order has been create and is of status ‘new’, function can be used to modify name and delivery attributes only. Arguments are the same as described in create order(/orders). Although duedate, delivery, estwordcount, and type are optional, care should be taken to submit the previous values of these if you do not wish to change them, otherwise they will be reset to default values.",
        "operationId": "EditAnOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "Name of the order"
          },
          {
            "name": "comment",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "Summary of the order"
          },
          {
            "name": "duedate",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "Due date in ISO8601 format, e.g. \"2016-09-28T16:24:00-05:00\""
          },
          {
            "name": "delivery",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "Delivery refers to optional additional upload repositories for completed translations besides the Acclaro API and My Acclaro customer portal. Delivery defaults to a choice of \"none\", but supports \"email\", \"box\", \"dropbox\", \"google\", \"zendesk\" and \"hubspot\". Additional 3rd party cloud service options may be added at later dates."
          },
          {
            "name": "estwordcount",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "type",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "may be set to \"strings\" if the order will contain strings rather than files"
          },
          {
            "name": "metadata",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "takes a JSON object"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/reference-file": {
      "post": {
        "summary": "Send a reference file",
        "description": "Adds a reference file to an order. Reference files are glossaries, style guides, or other supporting materials for the translator. The sourcelang is optional, and if supplied should be one of the language codes obtained from /info/languages. Targetlang is also optional, and if supplied should be one of the language codes obtained from /info/languages. Encoding is optional, and defaults to “UTF-8” if not specified. The   filename and mime-type are taken from the file metadata. If a filename is supplied that duplicates the name of another file in this order, the system will make it unique by adding additional characters (i.e. “documentation.docx” may become “documentation2.docx”). Returned file metadata includes both the originally supplied filename and the possibly-modified name that Acclaro will use. Individual file size is limited to 100MB  maximum. In-progress orders may have new additional files added to them as long as the source and target languages match the original order’s files.",
        "operationId": "SendAReferenceFile",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": true
          },
          {
            "name": "sourcelang",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "targetlang",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "encoding",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/tag": {
      "post": {
        "summary": "Add a tag to order",
        "description": "Adds a tag or multiple tags to an order. Unique tags added to orders should be separated by commas. Tags can be used for grouping selections of orders.",
        "operationId": "AddATagToOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "tag",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "list of tags separated by comma"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/tag-delete": {
      "post": {
        "summary": "Delete a tag from order",
        "description": "Deletes tags associated with orders. Tags can only be deleted once.",
        "operationId": "DeleteATagFromOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "tag",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "list of tags separated by comma"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/rate": {
      "post": {
        "summary": "Rate conent quality of an order",
        "description": "Rating scale is 1-5; being 1 for poor quality and 5 for perfect quality.",
        "operationId": "RateAnOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "rate",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/language": {
      "post": {
        "summary": "Add a language to order",
        "description": "Adds an additional target language to an order without adding any new source files. The new target language will be applied to each source file previously submitted. There is no API call to delete an order language. If language deletion is needed, please contact your project manager who can perform this function with administrative access.",
        "operationId": "AddALanguageToOrder",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "targetlang",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/files-info": {
      "get": {
        "summary": "Get an order’s file information",
        "description": "Returns information about all files in the order.",
        "operationId": "GetAnOrdersFileInformation",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/comments": {
      "get": {
        "summary": "Get an order’s comments",
        "description": "Returns information comments",
        "operationId": "GetAnOrdersComments",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "format can either be \"text\" or \"html\""
          },
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "records",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "number of comments to be retrieved"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "page number to retrieve if paginated"
          },
          {
            "name": "after",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "A textual datetime value e.g 2021-12-09 12:00:00"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/language-pair": {
      "post": {
        "summary": "Add source and target language to the order.",
        "description": "For orders with 0 source files at time of submission, this call can be used to tell the system which languages are required for this order. Can only be used on new orders that have not been submitted  or have not received quotes. Requests of already known languages will be ignored.",
        "operationId": "AddSourceAndTargetLanguageToTheOrder.",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "sourcelang",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "targetlang",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/submit": {
      "post": {
        "summary": "Submits the order for preparation",
        "description": "Immediately updates the order status to “in preparation”, returns  the updated record. Order status will soon change to ‘in progress’  once the Acclaro system confirms receipt of all order details and  files.",
        "operationId": "SubmitsTheOrderForPreparation",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/strings-info": {
      "get": {
        "summary": "Get order strings",
        "description": "Get all strings for an order along with their status and translated values if completed.",
        "operationId": "GetOrderStrings",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "string_ids",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "string ids separated by comma"
          },
          {
            "name": "key",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Gets strings matching a specific key"
          },
          {
            "name": "perPage",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Set the number of string returned per page (default: 100)."
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/quote": {
      "get": {
        "summary": "Request a quote",
        "description": "This may only be performed on an order with status “new“. Immediately  updates the order status to “getting quote” and returns the updated record. The assigned project manager will be sent the quote request. When a  quote is generated, the order status will change to “needs approval“.  At that time, the record returned from get order(/orders/{orderid} will include a “quoteprice” and both /orders/{orderid}/quote-document and /orders/{orderid}/quote-details may be used.",
        "operationId": "RequestAQuote",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/quote-details": {
      "get": {
        "summary": "Get quote details",
        "description": "This is expected to be performed on an order with status “needs approval, but will succeed on an order which has been through the quote process. Returns the quote value and line item details.",
        "operationId": "GetQuoteDetails",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/quote-document": {
      "get": {
        "summary": "Get a quote document",
        "description": "This is expected to be performed on an order with status “needs approval”, but will succeed on an order which has been through the quote process. Returns the quote, as a PDF, Word file, or RTF file. The Content-type header of the response will indicate the file type. This is one of the few operations that does not return JSON data, instead directly returning the file contents. If an error occurs while processing the request, then the response will be JSON data, so the type of the  response should always be checked.",
        "operationId": "GetAQuoteDocument",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/quote-approve": {
      "post": {
        "summary": "Approve a quote",
        "description": "This may only be performed on an order with status “needs approval”.\n  Immediately updates the order status to “in preparation” and instructs  the project manager to get started on the order. Customer agrees to  pay for the work performed.\n The order status will change to “in progress”  once work commences. Any additional comments for the order may be added  with the quote approval.",
        "operationId": "ApproveAQuote",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "comment",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders/{orderid}/quote-decline": {
      "post": {
        "summary": "Decline a quote",
        "description": "This may only be performed on an order with status “needs approva”.\n  Decline the quote on this order. The order status will move back to “getting  quote”. The project manager will see the comments, and either issue  a revised quote or cancel the order. It is also recommended the client  contact their project manager to discuss next steps.",
        "operationId": "DeclineAQuote",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The unique identifier assigned to the Order, i.e. Order ID"
          },
          {
            "name": "comment",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Get all orders",
        "description": "Returns all orders assigned to the current user, as an array of  Order records.\n Note that older completed orders may be archived  and removed from the active system. Can be filtered using status",
        "operationId": "GetAllOrders",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Filter the Orders by status"
          },
          {
            "name": "paginate",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Define the page you want to see results from"
          },
          {
            "name": "perPage",
            "default": "50",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Define how many records you want to see per page"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "summary": "Create an order",
        "description": "Creates an order for the current user with the given name.\n     *     The status of the order will be “new”",
        "operationId": "CreateAnOrder",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the order"
          },
          {
            "name": "comment",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Summary of the order"
          },
          {
            "name": "duedate",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Due date in ISO8601 format, e.g. \"2016-09-28T16:24:00-05:00\""
          },
          {
            "name": "delivery",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Delivery refers to optional additional upload repositories for completed translations besides the Acclaro API and My Acclaro customer portal. Delivery defaults to a choice of \"none\", but supports \"email\", \"box\", \"dropbox\", \"google\", \"zendesk\" and \"hubspot\". Additional 3rd party cloud service options may be added at later dates."
          },
          {
            "name": "estwordcount",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "EstimatedWordCount is an optional value and may be used to assist with making a quote for this order, if the information is available."
          },
          {
            "name": "clientref",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "ClientRef is an optional value meaningful to the API user; if supplied when the order is loaded, it will be returned in all future calls about this order."
          },
          {
            "name": "type",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Type is an optional field and refers to the order type which can be determined from the \"/info/order-types\" call"
          },
          {
            "name": "process_type",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Defines if the Order will be processed with files or strings"
          },
          {
            "name": "metadata",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "This field allows to input JSON objects as metadata"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}
